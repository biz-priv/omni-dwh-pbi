service: omni-dwh-pbi
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  versionFunctions: true
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  timeout: 30
  memorySize: 256
  iam:
    role:
      name: omni-coe-table-${self:provider.stage}-role
      statements:
      - 
        Effect: Allow
        Action:
        - "batch:SubmitJob"
        - "batch:ListJobs"
        Resource: 
        - "*"
      - 
        Effect: Allow
        Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        Resource: 
        - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/omni-coe-table-staging-table-${self:provider.stage}']]
        - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/omni-wt-rt-tracking-notes-${self:provider.stage}']]
        - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/omni-wt-rt-shipment-header-${self:provider.stage}']]
      - 
        Effect: Allow
        Action:
        - "sns:Publish"
        Resource:
        - "*"

package:
  individually: true

layers:
    OmniDWHLayer:
        path: lambdaLayer/lib
        name: ${self:service}-layer-${self:provider.stage}
        description: omni-dwh-pbi-services lambda layer for all node modules - ${self:provider.stage}
        compatibleRuntimes:
            - nodejs14.x
            - nodejs18.x
        retain: false

functions:
  omni_coe_table_reader: ${file(config/functions/omniCoeTable/omniCoeTableReaderFunction.yml):function}
  omni_coe_table_reader_batch_trigger: ${file(config/functions/omniCoeTable/omniCoeTableTriggerFunction.yml):function}

resources:
  Resources:
    omniCoeTableReaderQueue: ${file(config/queues/omniCoeTableReader.yml):omniCoeTableReaderQueue}
    omniCoeTableReaderDLQ: ${file(config/queues/omniCoeTableReader.yml):omniCoeTableReaderDLQ}
    omniCoeTableReaderSubscription: ${file(config/queues/omniCoeTableReader.yml):omniCoeTableReaderSubscription}
    omniCoeTableReaderQueuePolicy: ${file(config/queues/omniCoeTableReader.yml):omniCoeTableReaderQueuePolicy}
    omniCoeTableStagingTable: ${file(config/dynamodb/omniCoeTable/omniCoeTableStagingTable.yml):omniCoeTableStagingTable}
    omniCoeStagingTable: ${file(config/dynamodb/omniCoeTable/omniCoeStagingTable.yml):omniCoeStagingTable}
    OmniCoeTableBatchServiceRole: ${file(config/batch/omniCoeTable/omniCoeTableComputeEnvironment.yml):OmniCoeTableBatchServiceRole}
    OmniCoeTableComputeEnvironment: ${file(config/batch/omniCoeTable/omniCoeTableComputeEnvironment.yml):OmniCoeTableComputeEnvironment}
    OmniCoeTableJobQueue: ${file(config//batch/omniCoeTable/omniCoeTableJobQueue.yml):OmniCoeTableJobQueue}
    OmniCoeTableJobBatchTaskExecutionRole: ${file(config/batch/omniCoeTable/omniCoeTableJobDef.yml):OmniCoeTableJobBatchTaskExecutionRole}
    OmniCoeTableBatchLogGroup: ${file(config/batch/omniCoeTable/omniCoeTableJobDef.yml):OmniCoeTableBatchLogGroup}
    OmniCoeTableJobDefinition: ${file(config/batch/omniCoeTable/omniCoeTableJobDef.yml):OmniCoeTableJobDefinition}

plugins:
  - serverless-offline